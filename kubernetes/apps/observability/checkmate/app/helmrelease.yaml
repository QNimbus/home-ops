---
# yaml-language-server: $schema=https://schemas.clustrs.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app checkmate
  namespace: observability
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      server:
        containers:
          app:
            image:
              repository: ghcr.io/bluewave-labs/checkmate-backend
              tag: v2.3
            envFrom:
              - secretRef:
                  name: checkmate-secret

      client:
        pod:
          securityContext:
            runAsNonRoot: true
            runAsUser: 101
            runAsGroup: 101
            fsGroup: 101
        containers:
          app:
            image:
              repository: ghcr.io/bluewave-labs/checkmate-client
              tag: v2.3
            env:
              UPTIME_APP_API_BASE_URL: "https://${SERVER_DOMAIN}/api/v1"
              NGINX_ENVSUBST_TEMPLATE_DIR: /etc/nginx/templates
              NGINX_ENVSUBST_OUTPUT_DIR: /etc/nginx/conf.d
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false

    # Alias Service "server" so NGINX upstream resolves
    extraDeploy:
      - apiVersion: v1
        kind: Service
        metadata:
          name: server
          namespace: observability
        spec:
          type: ClusterIP
          selector:
            app.kubernetes.io/controller: server
            app.kubernetes.io/instance: checkmate
            app.kubernetes.io/name: checkmate
          ports:
            - name: http
              port: 52345
              targetPort: 52345

    persistence:
      client-nginx-templates:
        enabled: true
        type: configMap
        name: checkmate-client-nginx
        globalMounts:
          - path: /etc/nginx/templates
            readOnly: true

    service:
      server:
        controller: server
        ports:
          http:
            port: 52345
      client:
        controller: client
        ports:
          http:
            port: 80

    route:
      server:
        hostnames:
          - "${SERVER_DOMAIN}"
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: server
                port: 52345
      client:
        hostnames:
          - "${CLIENT_DOMAIN}"
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: client
                port: 80

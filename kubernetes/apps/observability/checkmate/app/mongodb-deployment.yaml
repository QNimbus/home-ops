---
apiVersion: v1
kind: Service
metadata:
  name: checkmate-mongodb
  labels:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: checkmate-mongodb
spec:
  ports:
    - port: 27017
      targetPort: 27017
      protocol: TCP
      name: mongodb
  selector:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: checkmate-mongodb
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: checkmate-mongodb-data
  labels:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: checkmate-mongodb
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 8Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: checkmate-mongodb
  labels:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: checkmate-mongodb
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: mongodb
      app.kubernetes.io/instance: checkmate-mongodb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mongodb
        app.kubernetes.io/instance: checkmate-mongodb
    spec:
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
        runAsGroup: 1001
        runAsNonRoot: true
      containers:
        - name: mongodb
          image: mongo:8.0.12
          ports:
            - containerPort: 27017
              name: mongodb
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: "root"
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: checkmate-secret
                  key: MONGODB_ROOT_PASSWORD
            - name: MONGO_INITDB_DATABASE
              value: "uptime_db"
          volumeMounts:
            - name: data
              mountPath: /data/db
            - name: init-script
              mountPath: /docker-entrypoint-initdb.d
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              memory: 1Gi
          livenessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: checkmate-mongodb-data
        - name: init-script
          configMap:
            name: checkmate-mongodb-init
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: checkmate-mongodb-init
  labels:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: checkmate-mongodb
data:
  01-create-user.js: |
    // Create database and user for Checkmate
    const dbName = 'uptime_db';
    const username = 'checkmate';
    const password = process.env.MONGODB_PASSWORD || 'checkmate';
    
    // Switch to the database
    db = db.getSiblingDB(dbName);
    
    // Create user with readWrite permissions
    db.createUser({
      user: username,
      pwd: password,
      roles: [
        {
          role: 'readWrite',
          db: dbName
        }
      ]
    });
    
    print(`User ${username} created for database ${dbName}`);

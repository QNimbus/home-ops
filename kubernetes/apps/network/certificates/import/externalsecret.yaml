---
# yaml-language-server: $schema=https://schemas.clustrs.dev/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: "${DOMAIN_APP/./-}-tls"
spec:
  refreshPolicy: CreatedOnce
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    name: "${DOMAIN_APP/./-}-tls"
    creationPolicy: Orphan
    template:
      type: kubernetes.io/tls
      metadata:
        annotations:
          cert-manager.io/alt-names: "*.${DOMAIN_APP},${DOMAIN_APP}"
          cert-manager.io/certificate-name: "${DOMAIN_APP/./-}"
          cert-manager.io/common-name: "${DOMAIN_APP}"
          cert-manager.io/ip-sans: ""
          cert-manager.io/issuer-group: ""
          cert-manager.io/issuer-kind: ClusterIssuer
          cert-manager.io/issuer-name: letsencrypt-production
          cert-manager.io/uri-sans: ""
        labels:
          controller.cert-manager.io/fao: "true"
  data:
    - secretKey: tls.crt
      remoteRef:
        key: "${DOMAIN_APP/./-}-tls"
        property: tls.crt
    - secretKey: tls.key
      remoteRef:
        key: "${DOMAIN_APP/./-}-tls"
        property: tls.key
---
# yaml-language-server: $schema=https://schemas.clustrs.dev/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: "${DOMAIN_CASA/./-}-tls"
spec:
  refreshPolicy: CreatedOnce
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    name: "${DOMAIN_CASA/./-}-tls"
    creationPolicy: Orphan
    template:
      type: kubernetes.io/tls
      metadata:
        annotations:
          cert-manager.io/alt-names: "*.${DOMAIN_CASA},${DOMAIN_CASA}"
          cert-manager.io/certificate-name: "${DOMAIN_CASA/./-}"
          cert-manager.io/common-name: "${DOMAIN_CASA}"
          cert-manager.io/ip-sans: ""
          cert-manager.io/issuer-group: ""
          cert-manager.io/issuer-kind: ClusterIssuer
          cert-manager.io/issuer-name: letsencrypt-production
          cert-manager.io/uri-sans: ""
        labels:
          controller.cert-manager.io/fao: "true"
  data:
    - secretKey: tls.crt
      remoteRef:
        key: "${DOMAIN_CASA/./-}-tls"
        property: tls.crt
    - secretKey: tls.key
      remoteRef:
        key: "${DOMAIN_CASA/./-}-tls"
        property: tls.key
---
# yaml-language-server: $schema=https://schemas.clustrs.dev/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: "${DOMAIN_ID/./-}-tls"
spec:
  refreshPolicy: CreatedOnce
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    name: "${DOMAIN_ID/./-}-tls"
    creationPolicy: Orphan
    template:
      type: kubernetes.io/tls
      metadata:
        annotations:
          cert-manager.io/alt-names: "*.${DOMAIN_ID},${DOMAIN_ID}"
          cert-manager.io/certificate-name: "${DOMAIN_ID/./-}"
          cert-manager.io/common-name: "${DOMAIN_ID}"
          cert-manager.io/ip-sans: ""
          cert-manager.io/issuer-group: ""
          cert-manager.io/issuer-kind: ClusterIssuer
          cert-manager.io/issuer-name: letsencrypt-production
          cert-manager.io/uri-sans: ""
        labels:
          controller.cert-manager.io/fao: "true"
  data:
    - secretKey: tls.crt
      remoteRef:
        key: "${DOMAIN_ID/./-}-tls"
        property: tls.crt
    - secretKey: tls.key
      remoteRef:
        key: "${DOMAIN_ID/./-}-tls"
        property: tls.key

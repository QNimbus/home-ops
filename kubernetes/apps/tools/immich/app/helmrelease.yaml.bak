---
# yaml-language-server: $schema=https://schemas.clustrs.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app immich
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      server:
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-server
              # renovate: datasource=github-releases depName=immich-app/immich
              tag: v1.142.0
            env:
              DB_HOSTNAME:
                valueFrom:
                  secretKeyRef:
                    name: secret-immich-db-user
                    key: HOST
              DB_USERNAME:
                valueFrom:
                  secretKeyRef:
                    name: secret-immich-db-user
                    key: LOGIN
              DB_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: secret-immich-db-user
                    key: PASSWORD
              DB_DATABASE_NAME:
                valueFrom:
                  secretKeyRef:
                    name: secret-immich-db-user
                    key: DATABASE_NAME
              REDIS_HOSTNAME: dragonfly.database.svc.cluster.local
              REDIS_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: immich-secret
                    key: REDIS_PASSWORD
              REDIS_DBINDEX: 0
              REDIS_BULL_PREFIX: '{immich-queue}'
              LOG_LEVEL: info
              TZ: Europe/Amsterdam
              IMMICH_MACHINE_LEARNING_URL: http://immich-machine-learning.tools.svc.cluster.local:3003
            envFrom:
              - secretRef:
                  name: immich-secret
            resources:
              requests:
                cpu: 500m
                memory: 2Gi
              limits:
                cpu: "4"
                memory: 4Gi
      machine-learning:
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-machine-learning
              # renovate: datasource=github-releases depName=immich-app/immich
              tag: v1.142.0
            env:
              DB_HOSTNAME:
                valueFrom:
                  secretKeyRef:
                    name: secret-immich-db-user
                    key: HOST
              DB_USERNAME:
                valueFrom:
                  secretKeyRef:
                    name: secret-immich-db-user
                    key: LOGIN
              DB_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: secret-immich-db-user
                    key: PASSWORD
              DB_DATABASE_NAME:
                valueFrom:
                  secretKeyRef:
                    name: secret-immich-db-user
                    key: DATABASE_NAME
              REDIS_HOSTNAME: dragonfly.database.svc.cluster.local
              REDIS_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: immich-secret
                    key: REDIS_PASSWORD
              REDIS_DBINDEX: 0
              REDIS_BULL_PREFIX: '{immich-queue}'
              LOG_LEVEL: info
              TZ: Europe/Amsterdam
              TRANSFORMERS_CACHE: /cache
            envFrom:
              - secretRef:
                  name: immich-secret
            resources:
              requests:
                cpu: 500m
                memory: 4Gi
              limits:
                cpu: 3000m
                memory: 6Gi

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile:
          type: RuntimeDefault

    persistence:
      library:
        existingClaim: photo-library
        globalMounts:
          - path: /usr/src/app/upload
      cache:
        existingClaim: immich-machine-learning-cache
        globalMounts:
          - path: /cache

    route:
      app:
        hostnames: ["photos.vwn.app"]
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https-app
        rules:
          - backendRefs:
              - identifier: server
                port: &serverPort 2283

    service:
      server:
        controller: server
        ports:
          http:
            port: *serverPort
      machine-learning:
        controller: machine-learning
        ports:
          http:
            port: 3003

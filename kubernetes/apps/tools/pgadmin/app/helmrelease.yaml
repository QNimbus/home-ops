---
# yaml-language-server: $schema=https://schemas.clustrs.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app pgadmin
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      *app :
        annotations:
          reloader.stakater.com/auto: "true"
        strategy: Recreate
        initContainers:
          init-config:
            image:
              repository: ghcr.io/home-operations/k8s-sidecar
              tag: 1.30.10@sha256:dd3b1f0c4e6b4512b2deb50c58acf65fd0f0927120a59a95eec854d32a6c9ce3
            command: ["/bin/bash", "-c"]
            args:
              - |
                # Function to process a pgAdmin user email
                process_user() {
                  local email=$1
                  if [ -n "$email" ]; then
                    local user_folder=$(echo "/var/lib/pgadmin/storage/$email" | sed 's/@/_/g')
                    echo "Creating user folder $user_folder"
                    mkdir -p "$user_folder"

                    # Make a friendly link to the SMB backup share so it shows in pgAdmin's file browser
                    if [ ! -e "$user_folder/backups" ]; then
                      ln -s /mnt/backups "$user_folder/backups"
                    fi

                    if [ -f /tmp/secrets/pgpass ]; then
                      echo "Copying /tmp/secrets/pgpass file to $user_folder/.pgpass"
                      cp /tmp/secrets/pgpass "$user_folder/.pgpass"
                      echo "Setting permissions on .pgpass file"
                      chown 5050:5050 "$user_folder/.pgpass"
                      chmod 600 "$user_folder/.pgpass"
                    else
                      echo "Warning: pgpass file not found at /tmp/secrets/pgpass"
                    fi
                  fi
                }

                # Process default and additional users
                process_user "$PGADMIN_DEFAULT_EMAIL"
                process_user "$PGADMIN_ADDITIONAL_EMAIL"

                echo "Done."
            env:
              PGADMIN_DEFAULT_EMAIL:
                valueFrom:
                  secretKeyRef:
                    name: &secret pgadmin-secret
                    key: PGADMIN_DEFAULT_EMAIL
              PGADMIN_ADDITIONAL_EMAIL:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: PGADMIN_ADDITIONAL_EMAIL
            securityContext:
              runAsUser: 5050
              runAsGroup: 5050
        containers:
          app:
            image:
              repository: dpage/pgadmin4
              tag: 9.6.0@sha256:2c7d73e13bd6c30b1d53e4c25d0d6d81adbd0799c4f4d6a09efc5d68fca5d16d
            env:
              PGADMIN_CONFIG_AUTHENTICATION_SOURCES: "['oauth2']"
              PGADMIN_CONFIG_CONSOLE_LOG_LEVEL: "20"
              PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: "False"
              PGADMIN_CONFIG_MAIL_PORT: "587"
              PGADMIN_CONFIG_MAIL_USE_TLS: "True"
              PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
              PGADMIN_CONFIG_OAUTH2_AUTO_CREATE_USER: "True"
              PGADMIN_CONFIG_UPGRADE_CHECK_ENABLED: "False"
              PGADMIN_DISABLE_POSTFIX: "True"
              PGADMIN_LISTEN_PORT: &port 5050
              PGADMIN_REPLACE_SERVERS_ON_STARTUP: "True"
            envFrom:
              - secretRef:
                  name: *secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /misc/ping
                    port: *port
                  initialDelaySeconds: 0  # No delay needed with startup probe
                  periodSeconds: 10
                  timeoutSeconds: 5
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /misc/ping
                    port: *port
                  initialDelaySeconds: 10  # Small initial delay for container startup
                  periodSeconds: 10
                  timeoutSeconds: 5
                  failureThreshold: 30     # Allow up to 5 minutes instead of 10
            # No resource limits - BestEffort QoS - First pods to be killed on resource contention
            # resources:
            #   requests:
            #     cpu: 10m
            #     memory: 256Mi
            #   limits:
            #     memory: 512Mi
    defaultPodOptions:
      securityContext:
        runAsUser: 5050
        runAsGroup: 5050
        fsGroup: 5050
        fsGroupChangePolicy: OnRootMismatch
    persistence:
      config:
        existingClaim: "${VOLSYNC_CLAIM}"
        advancedMounts:
          *app :
            init-config:
              - path: /var/lib/pgadmin
              - path: /tmp/secrets/.pgpass
                subPath: pgpass
            app:
              - path: /var/lib/pgadmin
      secrets:
        type: secret
        name: *secret
        advancedMounts:
          *app :
            init-config:
              - path: /tmp/secrets
            app:
              - path: /pgadmin4/servers.json
                subPath: servers.json
      backups:
        existingClaim: smb-backups
        advancedMounts:
          *app :
            init-config:
              - path: /mnt/backups
                subPath: apps/pgadmin
            app:
              - path: /mnt/backups
                subPath: apps/pgadmin
      tmpfs:
        type: emptyDir
        advancedMounts:
          *app :
            app:
              - path: /tmp
                subPath: tmp
    route:
      app:
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: "Tools"
          gethomepage.dev/name: "${GATUS_NAME}"
          gethomepage.dev/icon: "sh-pgadmin.svg"
        hostnames:
          - "${GATUS_DOMAIN:=${GATUS_SUBDOMAIN:=${APP}}.${DOMAIN_APP}}"
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https-app
        rules:
          - backendRefs:
              - name: *app
                port: *port
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port

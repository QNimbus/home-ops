---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app pgadmin
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      pgadmin:
        annotations:
          reloader.stakater.com/auto: "true"
        replicas: 1
        strategy: Recreate
        revisionHistoryLimit: 3
        initContainers:
          fix-perms:
            image:
              repository: busybox
              tag: 1.37.0
            command:
              - /bin/sh
              - -c
              - |
                cp /pgadmin4/pgpass /var/lib/pgadmin/pgpass
                cp /pgadmin4/servers.json /var/lib/pgadmin/servers.json
                chmod 0600 /var/lib/pgadmin/pgpass
                chmod 0600 /var/lib/pgadmin/servers.json
                chown 5050:5050 /var/lib/pgadmin/pgpass
                chown 5050:5050 /var/lib/pgadmin/servers.json
        containers:
          app:
            image:
              repository: docker.io/dpage/pgadmin4
              tag: 9.4.0
            env:
              PGADMIN_LISTEN_PORT: &port 5050
              PGADMIN_CONFIG_CONSOLE_LOG_LEVEL: 20 # Debug (0, 10, 20, 30, 40, 50: NOTSET, DEBUG, INFO, SQL, WARNING, ERROR, CRITICAL)
              PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: "False"
              PGADMIN_CONFIG_MAIL_PORT: "587"
              PGADMIN_CONFIG_MAIL_USE_TLS: "True"
              PGADMIN_DISABLE_POSTFIX: "True"
              PGADMIN_SERVER_JSON_FILE: /var/lib/pgadmin/servers.json
              PGADMIN_CONFIG_UPGRADE_CHECK_ENABLED: "False"
            envFrom:
              - secretRef:
                  name: &secret pgadmin-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /misc/ping
                    port: *port
                  initialDelaySeconds: 5
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 10m
                memory: 150Mi
              limits:
                memory: 384Mi
    defaultPodOptions:
      securityContext:
        runAsUser: 5050
        runAsGroup: 5050
        fsGroup: 5050
        fsGroupChangePolicy: OnRootMismatch
    persistence:
      pgpass:
        type: secret
        name: *secret
        globalMounts:
          - path: /pgadmin4/pgpass
            subPath: pgpass
      config:
        existingClaim: pgadmin-config
        advancedMounts:
          pgadmin:
            fix-perms:
              - path: /var/lib/pgadmin
            app:
              - path: /var/lib/pgadmin
      servers-json-file:
        type: configMap
        name: servers.json
        globalMounts:
          - path: /pgadmin4/servers.json
            subPath: servers.json
      config-py:
        type: configMap
        name: pgadmin-config-py
        globalMounts:
          - path: /pgadmin4/config.py
            subPath: config.py
    route:
      app:
        hostnames: ["pgadmin.${DOMAIN_APP}"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https-app
        rules:
          - backendRefs:
              - identifier: app
                port: *port
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port

---
# yaml-language-server: $schema=https://schemas.clustrs.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app coder
spec:
  interval: 1h
  chart:
    spec:
      chart: coder
      version: 2.25.1
      sourceRef:
        kind: HelmRepository
        name: coder
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  driftDetection:
    mode: enabled
  # Default values
  # Ref: https://github.com/coder/coder/blob/main/helm/coder/values.yaml
  values:
    coder:
      strategy: Recreate
      env:
        # --- GENERAL SETTINGS ---
        - name: CODER_ACCESS_URL
          value: "https://${GATUS_DOMAIN:=${GATUS_SUBDOMAIN:=${APP}}.${DOMAIN_APP}}"
        - name: CODER_WILDCARD_ACCESS_URL
          value: "*.${GATUS_SUBDOMAIN:=${APP}}.${DOMAIN_DEV}"
        - name: CODER_DISABLE_PASSWORD_AUTH
          value: "false"

        # --- OIDC AUTHENTICATION SETTINGS ---
        # This is not working as expected - maybe because IdP Sync is a premium feature (see: https://coder.com/docs/@v2.25.1/admin/users/idp-sync)
        - name: CODER_OIDC_USER_ROLE_FIELD
          value: "groups"
        - name: CODER_OIDC_USER_ROLE_MAPPING
          value: '{"Administrators":["owner"]}'
        - name: CODER_OIDC_SCOPES
          value: "openid,profile,email,groups,offline_access"

        # --- Other Settings from your config ---
        - name: CODER_BLOCK_DIRECT
          value: "true"
        - name: CODER_DERP_SERVER_STUN_ADDRESSES
          value: "disable"
        - name: CODER_EMAIL_TLS_STARTTLS
          value: "true"
        - name: CODER_LOGGING_HUMAN
          value: "/dev/stderr"
        - name: CODER_OAUTH2_GITHUB_DEFAULT_PROVIDER_ENABLE
          value: "false"
        - name: CODER_OIDC_GROUP_AUTO_CREATE
          value: "false"
        - name: CODER_OIDC_IGNORE_USERINFO
          value: "true"

        - name: CODER_PROMETHEUS_ENABLE
          value: "true"
        - name: CODER_PROMETHEUS_COLLECT_AGENT_STATS
          value: "true"
        - name: CODER_TELEMETRY_ENABLE
          value: "false"
        - name: CODER_UPDATE_CHECK
          value: "false"
        #  # For debugging if needed
        # - name: CODER_VERBOSE
        #   value: "true"
        # - name: CODER_LOG_FILTER
        #   value: ".*got oidc claims.*|.*userauth.*|.*groups returned.*|.*oidc.*"

      envFrom: &envFrom
        - secretRef:
            name: coder-secret
      ingress:
        enable: false
      initContainers:
        - name: init-db
          image: ghcr.io/home-operations/postgres-init:17.5.0@sha256:e0c87ce7df39d06b93f27cf2cc6a056611f13faaa88cc07ab4dc8bf7a85d0b11
          envFrom:
            - secretRef:
                name: coder-secret
      podAnnotations:
        reloader.stakater.com/auto: "true"
        prometheus.io/scrape: "true"
        prometheus.io/port: "2112"
      resources:
        requests:
          cpu: 20m
          memory: 1Gi
        limits:
          memory: 2Gi
      securityContext:
        allowPrivilegeEscalation: false
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        readOnlyRootFilesystem: null
        seccompProfile:
          type: RuntimeDefault
      service:
        type: LoadBalancer
        annotations:
          external-dns.alpha.kubernetes.io/hostname: "*.coder.${DOMAIN_DEV}"
          io.cilium/lb-ipam-ips: ${LB_IP_CODER}
      probes:
        liveness: &probes
          enabled: true
          custom: true
          spec:
            initialDelaySeconds: 10  # No delay needed with startup probe
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
        readiness: *probes
        startup:
          enabled: true
          custom: true
          spec:
            initialDelaySeconds: 10  # Small initial delay for container startup
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 30     # Allow up to 5 minutes instead of 10
  postRenderers:
    - kustomize:
        patches:
          - target:
              kind: Service
              name: *app
            patch: |
              - op: add
                path: /spec/ports/-
                value:
                  name: prom-http
                  port: 2112
                  protocol: TCP
                  targetPort: 2112
